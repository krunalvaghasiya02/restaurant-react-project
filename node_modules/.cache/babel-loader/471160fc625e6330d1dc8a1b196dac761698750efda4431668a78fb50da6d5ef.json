{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    itemsList: [],\n    totalQuantity: 0,\n    showCart: false\n  },\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      // to check if the item is availabel\n      const existingItem = state.itemsList.find(item => item.id === newItem.id);\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.totleprice += newItem.price;\n      } else {\n        state.itemsList.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totleprice: newItem.price,\n          name: newItem.name\n        });\n        state.totlQuantity++;\n      }\n    },\n    removeFromCart() {},\n    setShowCart(state) {\n      state.showCart = true;\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","itemsList","totalQuantity","showCart","reducers","addToCart","state","action","newItem","payload","existingItem","find","item","id","quantity","totleprice","price","push","totlQuantity","removeFromCart","setShowCart","cartActions","actions"],"sources":["D:/collage/sem 5 project/restaurant/src/store/card.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState: {\r\n    itemsList: [],\r\n    totalQuantity: 0,\r\n    showCart: false\r\n  },\r\n  reducers: {\r\n    addToCart(state, action) {\r\n      const newItem = action.payload;\r\n      // to check if the item is availabel\r\n      const existingItem = state.itemsList.find((item) => item.id === newItem.id);\r\n      if (existingItem) {\r\n        existingItem.quantity++;\r\n        existingItem.totleprice += newItem.price;\r\n      } else {\r\n        state.itemsList.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totleprice: newItem.price,\r\n          name: newItem.name,\r\n        });\r\n        state.totlQuantity++;\r\n      }\r\n    },\r\n    removeFromCart() { },\r\n    setShowCart(state) {\r\n      state.showCart = true;\r\n    },\r\n  }\r\n})\r\nexport const cartActions=cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,aAAa,EAAE,CAAC;IAChBC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACL,SAAS,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MAC3E,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACI,QAAQ,EAAE;QACvBJ,YAAY,CAACK,UAAU,IAAIP,OAAO,CAACQ,KAAK;MAC1C,CAAC,MAAM;QACLV,KAAK,CAACL,SAAS,CAACgB,IAAI,CAAC;UACnBJ,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdG,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBF,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEP,OAAO,CAACQ,KAAK;UACzBjB,IAAI,EAAES,OAAO,CAACT;QAChB,CAAC,CAAC;QACFO,KAAK,CAACY,YAAY,EAAE;MACtB;IACF,CAAC;IACDC,cAAcA,CAAA,EAAG,CAAE,CAAC;IACpBC,WAAWA,CAACd,KAAK,EAAE;MACjBA,KAAK,CAACH,QAAQ,GAAG,IAAI;IACvB;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAMkB,WAAW,GAACvB,SAAS,CAACwB,OAAO;AAC1C,eAAexB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}